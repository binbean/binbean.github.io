<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Binbean.学习笔记</title>
    <link>https://binbean.github.io/tags/java/</link>
    <description>Recent content in Java on Binbean.学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 06 Sep 2019 22:36:27 +0800</lastBuildDate>
    
	<atom:link href="https://binbean.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>常用java代码片段</title>
      <link>https://binbean.github.io/post/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/</link>
      <pubDate>Fri, 06 Sep 2019 22:36:27 +0800</pubDate>
      
      <guid>https://binbean.github.io/post/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/</guid>
      <description>常用Java代码片段  检查空对象   if (Objects.isNull(obj)) { return null; }   检查字符串为空   if (Objects.isNull(string) || string.isEmpty()) { return null; }   检查列表为空   if (CollectionUtils.isEmpty(list)) { return Collections.emptyList(); }   检查对象相等   Objects.equals(name, thisName);   Map遍历  当循环中只需要获取Map 的主键key时，迭代keySet() 是正确的；但是，当需要主键key 和取值value 时，迭代entrySet() 才是更高效的做法，其比先迭代keySet() 后再去通过get 取值性能更佳。
 //Map 获取key &amp;amp; value: HashMap&amp;lt;String, String&amp;gt; map = new HashMap&amp;lt;&amp;gt;(); for (Map.Entry&amp;lt;String,String&amp;gt; entry : map.</description>
    </item>
    
    <item>
      <title>Java多线程实现原理(源码阅读)</title>
      <link>https://binbean.github.io/post/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Sun, 02 Sep 2018 10:10:44 +0800</pubDate>
      
      <guid>https://binbean.github.io/post/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
      <description>Thread，Runable  Thread源码   public class Thread implements Runnable { /* What will be run. */ private Runnable target; ... }   当Thread通过Runable作为构造参数创建时，会调用Runable具体实现类的run方法。如果线程是通过继承Thread构造的，则需要复写Thread的run方法。   /** * If this thread was constructed using a separate * &amp;lt;code&amp;gt;Runnable&amp;lt;/code&amp;gt; run object, then that * &amp;lt;code&amp;gt;Runnable&amp;lt;/code&amp;gt; object&#39;s &amp;lt;code&amp;gt;run&amp;lt;/code&amp;gt; method is called; * otherwise, this method does nothing and returns. * &amp;lt;p&amp;gt; * Subclasses of &amp;lt;code&amp;gt;Thread&amp;lt;/code&amp;gt; should override this method. * * @see #start() * @see #stop() * @see #Thread(ThreadGroup, Runnable, String) */ @Override public void run() { if (target !</description>
    </item>
    
    <item>
      <title>Maven中设置Java版本</title>
      <link>https://binbean.github.io/post/maven%E4%B8%AD%E8%AE%BE%E7%BD%AEjava%E7%89%88%E6%9C%AC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://binbean.github.io/post/maven%E4%B8%AD%E8%AE%BE%E7%BD%AEjava%E7%89%88%E6%9C%AC/</guid>
      <description> yaml语法Maven中设置Java版本 使用Compiler Plugin Maven Compiler 命令接受 -source 和 - target 版本参数，默认情况，两个参数都为1.6
&amp;lt;properties&amp;gt; &amp;lt;maven.compiler.target&amp;gt;1.8&amp;lt;/maven.compiler.target&amp;gt; &amp;lt;maven.compiler.source&amp;gt;1.8&amp;lt;/maven.compiler.source&amp;gt; &amp;lt;/properties&amp;gt;  &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt; &amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;/plugins&amp;gt;  Java9及以上版本 从java 9 开始，可以使用 -release命令行参数
 &amp;lt;properties&amp;gt; &amp;lt;maven.compiler.release&amp;gt;7&amp;lt;/maven.compiler.release&amp;gt; &amp;lt;/properties&amp;gt;   maven-compiler-plugin版本3.6以上
 &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.8.0&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;release&amp;gt;7&amp;lt;/release&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/plugin&amp;gt;   Spring Boot 项目 Spirng Boot 应用在pom.xml的properties中定义了JDK版本，我们的项目需要添加*spring-boot-starter-parent*作为父模块。
 &amp;lt;parent&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.0.5.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/parent&amp;gt;   spring boot 默认java版本为1.8，可通Java.version属性修改.
 &amp;lt;properties&amp;gt; &amp;lt;java.version&amp;gt;1.9&amp;lt;/java.version&amp;gt; &amp;lt;/properties&amp;gt;   </description>
    </item>
    
  </channel>
</rss>