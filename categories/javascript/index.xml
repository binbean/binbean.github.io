<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Binbean&#39;s Blog</title>
    <link>https://binbean.github.io/categories/javascript/</link>
    <description>Recent content in javascript on Binbean&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 19 Nov 2019 14:58:12 +0800</lastBuildDate>
    
	<atom:link href="https://binbean.github.io/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Javascript中的encodeURI与encodeURIComponent</title>
      <link>https://binbean.github.io/post/javascript%E4%B8%AD%E7%9A%84encodeuri%E4%B8%8Eencodeuricomponent/</link>
      <pubDate>Tue, 19 Nov 2019 14:58:12 +0800</pubDate>
      
      <guid>https://binbean.github.io/post/javascript%E4%B8%AD%E7%9A%84encodeuri%E4%B8%8Eencodeuricomponent/</guid>
      <description>Javascript中encodeURI和encodeURIComponent两个方法都是encode URI的，但是究竟有什么区别，下面将详</description>
    </item>
    
    <item>
      <title>Javascript Good Part读书笔记-JavaScript正则表达式</title>
      <link>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Thu, 14 Nov 2019 20:47:36 +0800</pubDate>
      
      <guid>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>正则表达式（Regular Expressions） 例子 1 var parse_url = /^(?:([A-Za-z]+):)?(\/{0,3})([0-9.-A-Za-z]+) (?::(\d+))?(?:\/( (?#)))?(?:\?( (#)))?(?:#(.*))?$/; 解析 1 2 3 4 5 6 7 8 1 ^表示正则字符串开始 2 (?:([A-Za-z]+):)? 匹配schema（可选）</description>
    </item>
    
    <item>
      <title>Javascript Good Part读书笔记-JavaScript数组</title>
      <link>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%95%B0%E7%BB%84/</link>
      <pubDate>Thu, 14 Nov 2019 20:40:02 +0800</pubDate>
      
      <guid>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%95%B0%E7%BB%84/</guid>
      <description>数组（Arrays） JavaScript数组实际上是对象。 数组字面符 1 2 3 4 5 6 7 8 9 var empty = []; var numbers = [ &amp;#39;zero&amp;#39;, &amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;three&amp;#39;, &amp;#39;four&amp;#39;, &amp;#39;five&amp;#39;, &amp;#39;six&amp;#39;, &amp;#39;seven&amp;#39;, &amp;#39;eight&amp;#39;, &amp;#39;nine&amp;#39; ]; empty[1] // undefined numbers[1] // &amp;#39;one&amp;#39; empty.length //</description>
    </item>
    
    <item>
      <title>Javascript Good Part读书笔记-JavaScript继承</title>
      <link>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%BB%A7%E6%89%BF/</link>
      <pubDate>Thu, 14 Nov 2019 20:37:57 +0800</pubDate>
      
      <guid>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%BB%A7%E6%89%BF/</guid>
      <description>继承（Inheritance） 伪类（Pseudoclassical） 当一个函数对象被创建时，这个函数的构造器会产生一个函数对象运行类似下面的</description>
    </item>
    
    <item>
      <title>Javascript Good Part读书笔记-JavaScript函数</title>
      <link>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 14 Nov 2019 20:34:08 +0800</pubDate>
      
      <guid>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E5%87%BD%E6%95%B0/</guid>
      <description>函数（Functions） 函数对象（Function Objects） 在JavaScript中函数就是对象（Functions in Javascript are objec</description>
    </item>
    
    <item>
      <title>Javascript Good Part读书笔记-JavaScript对象</title>
      <link>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Thu, 14 Nov 2019 20:30:10 +0800</pubDate>
      
      <guid>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E5%AF%B9%E8%B1%A1/</guid>
      <description>对象（Objects） 包括简单类型：number， string， boolean，null，undefined和对象类型两种。number， s</description>
    </item>
    
    <item>
      <title>Javascript Good Part读书笔记-JavaScript语法</title>
      <link>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Thu, 14 Nov 2019 20:27:06 +0800</pubDate>
      
      <guid>https://binbean.github.io/post/javascript-good-part%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E8%AF%AD%E6%B3%95/</guid>
      <description>语法 空格（Whitespace） 注释方式，建议尽量使用行注释形式 行注释形式 // 块注释形式 /* */ 块注释形式有时候可能不安全，会引起语法错误 1 2 3 /*</description>
    </item>
    
    <item>
      <title>Javascript Good Part读书笔记-JavaScript方法</title>
      <link>https://binbean.github.io/post/javascript-good-part/</link>
      <pubDate>Sat, 02 Nov 2019 10:10:44 +0800</pubDate>
      
      <guid>https://binbean.github.io/post/javascript-good-part/</guid>
      <description>方法（Methods） 数组（array） array.concat(item&amp;hellip;) 通过浅拷贝产生一个新的数组，并添加item到这个数组。 1 2 3 4 var a = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;]; var b = [&amp;#39;x&amp;#39;, &amp;#39;y&amp;#39;, &amp;#39;z&amp;#39;]; var c = a.concat(b, true); //</description>
    </item>
    
  </channel>
</rss>